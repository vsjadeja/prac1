version: '3'

services:
  # Redis sever for application cache
  cache:
    container_name: ${APP_NAME}_redis
    image: redis
    restart: always
    expose:
      - 6379
    volumes:
      - cacheStorage:/data
    networks:
      - backend
    command: redis-server --requirepass ${REDIS_PASSWORD}
    
  # MariaDB master database for application storage
  masterdb:
    container_name: ${APP_NAME}_write
    image: bitnami/mariadb:10.3
    restart: always
    volumes:
      - dbMasterStorage:/bitnami/mariadb
    expose:
      - ${DB_PORT}
    environment:
      - MARIADB_REPLICATION_MODE=master
      - MARIADB_REPLICATION_USER=${REPLICATION_USER}
      - MARIADB_REPLICATION_PASSWORD=${REPLICATION_PASSWORD}
      - MARIADB_ROOT_PASSWORD=${ROOT_PASSWORD}
      - MARIADB_USER=${DB_USERNAME}
      - MARIADB_PASSWORD=${DB_PASSWORD}
      - MARIADB_DATABASE=${DB_DATABASE}
    networks:
      - backend
  # MariaDB slave database for application storage
  slavedb:
    container_name: ${APP_NAME}_read
    image: bitnami/mariadb:10.3
    restart: always
    volumes:
      - dbSlaveStorage:/bitnami/mariadb
    expose:
      - ${DB_PORT}
    environment:
      - MARIADB_REPLICATION_MODE=slave
      - MARIADB_REPLICATION_USER=${REPLICATION_USER}
      - MARIADB_REPLICATION_PASSWORD=${REPLICATION_PASSWORD}
      - MARIADB_MASTER_HOST=masterdb
      - MARIADB_MASTER_PORT_NUMBER=${DB_PORT}
      - MARIADB_MASTER_ROOT_PASSWORD=${ROOT_PASSWORD}
      - MARIADB_USER=${DB_USERNAME}
      - MARIADB_PASSWORD=${DB_PASSWORD}
      - MARIADB_DATABASE=${DB_DATABASE}
    networks:
      - backend
    depends_on:
      - masterdb

  web:
    container_name: ${APP_NAME}
    restart: always
    build:
      context: ./
    ports:
      - 80:8080
    networks:
      - frontend
      - backend
    depends_on:
      - cache
      - masterdb
      - slavedb

volumes:
  cacheStorage: {}
  dbMasterStorage: {}
  dbSlaveStorage: {}

networks:
  frontend:
  backend:
